# GreenMatrix VM Agent Configuration
# Copy this file to vm_agent.ini and customize as needed

[agent]
# Backend URL - The GreenMatrix backend API endpoint
# If not specified, the agent will attempt auto-discovery via default gateway
# Examples:
#   backend_url = http://192.168.1.100:8000
#   backend_url = https://greenmatrix.company.com
backend_url = 

# VM Name - Unique identifier for this virtual machine
# If not specified, will use hostname + OS info (e.g., "web-server-01-Linux")
# Examples:
#   vm_name = production-web-01
#   vm_name = dev-database-server
#   vm_name = test-environment-vm
vm_name = 

# Collection Interval - How often to collect and send metrics (in seconds)
# Lower values provide more granular data but increase network traffic
# Recommended: 60-300 seconds depending on monitoring requirements
# Default: 60
collection_interval = 60

# API Timeout - HTTP request timeout for backend communication (in seconds)
# Increase if you experience timeout errors on slow networks
# Default: 30
api_timeout = 30

# CPU TDP - Thermal Design Power in watts for CPU power estimation
# Used for calculating estimated power consumption per process
# Common values:
#   Desktop CPUs: 65-125W
#   Server CPUs: 85-250W
#   Laptop CPUs: 15-45W
# Default: 125.0
cpu_tdp_watts = 125.0

# Max Retries - Maximum number of retry attempts for failed API requests
# The agent will retry failed requests with exponential backoff
# Default: 3
max_retries = 3

# Retry Delay - Initial delay between retry attempts (in seconds)
# Actual delay increases with each retry attempt
# Default: 5
retry_delay = 5

# Log Level - Controls verbosity of log output
# Options: DEBUG, INFO, WARNING, ERROR
# DEBUG: Very detailed output for troubleshooting
# INFO: Normal operational messages
# WARNING: Important issues that don't stop operation
# ERROR: Only critical errors
# Default: INFO
log_level = INFO

# Example configurations for different environments:

# High-frequency monitoring (every 30 seconds)
# collection_interval = 30
# log_level = WARNING

# Low-impact monitoring (every 5 minutes)
# collection_interval = 300
# log_level = ERROR

# Debug mode for troubleshooting
# collection_interval = 60
# log_level = DEBUG
# api_timeout = 60

# Production environment with custom backend
# backend_url = https://monitoring.company.com/api
# vm_name = prod-app-server-01
# collection_interval = 120
# log_level = WARNING